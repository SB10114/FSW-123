{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sierr\\\\Desktop\\\\bryan\\\\fsw-123\\\\week6\\\\Assignments\\\\Todo2\\\\src\\\\TodoForm.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction TodoForm({\n  addTodo\n}) {\n  _s();\n\n  const [value, setValue] = useState('');\n  const [error, setError] = useState('');\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n\n    if (value === '') {\n      setError('Please fill out todo');\n      return;\n    } else {\n      addTodo(value);\n      setValue('');\n    }\n  };\n\n  const handleChange = evt => {\n    if (error) setError('');\n    setValue(evt.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      onChange: e => {\n        var {\n          value\n        } = e.target;\n        setValue(value);\n      },\n      value: value,\n      placeholder: \"Type item here\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: e => {\n        if (value.length !== 0) {\n          todo.addTodo(value);\n        } else {\n          setError('Please provide a todo');\n        }\n\n        e.preventDefault();\n      },\n      children: \"Add New Item\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 13\n  }, this);\n}\n\n_s(TodoForm, \"qxZdhtr9g92c3GV8J/N8QXf7hhg=\");\n\n_c = TodoForm;\nexport default TodoForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoForm\");","map":{"version":3,"sources":["C:/Users/sierr/Desktop/bryan/fsw-123/week6/Assignments/Todo2/src/TodoForm.js"],"names":["useState","TodoForm","addTodo","value","setValue","error","setError","handleSubmit","evt","preventDefault","handleChange","target","e","length","todo"],"mappings":";;;AAAA,SAAQA,QAAR,QAAuB,OAAvB;;;AAEA,SAASC,QAAT,CAAkB;AAACC,EAAAA;AAAD,CAAlB,EAA6B;AAAA;;AACzB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACK,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,EAAD,CAAlC;;AAEA,QAAMO,YAAY,GAAIC,GAAD,IAAS;AAC1BA,IAAAA,GAAG,CAACC,cAAJ;;AAEA,QAAIN,KAAK,KAAK,EAAd,EAAkB;AACdG,MAAAA,QAAQ,CAAC,sBAAD,CAAR;AACA;AACH,KAHD,MAGO;AACHJ,MAAAA,OAAO,CAACC,KAAD,CAAP;AACAC,MAAAA,QAAQ,CAAC,EAAD,CAAR;AACH;AACJ,GAVD;;AAYA,QAAMM,YAAY,GAAIF,GAAD,IAAS;AAC1B,QAAIH,KAAJ,EAAWC,QAAQ,CAAC,EAAD,CAAR;AACXF,IAAAA,QAAQ,CAACI,GAAG,CAACG,MAAJ,CAAWR,KAAZ,CAAR;AACH,GAHD;;AAKA,sBACQ;AAAA,4BACI;AAAO,MAAA,IAAI,EAAG,MAAd;AAAqB,MAAA,QAAQ,EAAKS,CAAD,IAAO;AACpC,YAAI;AAACT,UAAAA;AAAD,YAAUS,CAAC,CAACD,MAAhB;AACAP,QAAAA,QAAQ,CAACD,KAAD,CAAR;AACH,OAHD;AAGG,MAAA,KAAK,EAAIA,KAHZ;AAIA,MAAA,WAAW,EAAG;AAJd;AAAA;AAAA;AAAA;AAAA,YADJ,eAOI;AAAQ,MAAA,OAAO,EAAKS,CAAD,IACf;AACI,YAAGT,KAAK,CAACU,MAAN,KAAiB,CAApB,EAAsB;AAACC,UAAAA,IAAI,CAACZ,OAAL,CAAaC,KAAb;AAAoB,SAA3C,MACK;AACDG,UAAAA,QAAQ,CAAC,uBAAD,CAAR;AACH;;AACDM,QAAAA,CAAC,CAACH,cAAF;AAEH,OARL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAPJ,eAiBI;AAAA,gBAAIJ;AAAJ;AAAA;AAAA;AAAA;AAAA,YAjBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADR;AAqBH;;GA1CQJ,Q;;KAAAA,Q;AA4CT,eAAeA,QAAf","sourcesContent":["import {useState} from \"react\"\r\n\r\nfunction TodoForm({addTodo}) {\r\n    const [value, setValue] = useState('')\r\n    const [error, setError] = useState('')\r\n\r\n    const handleSubmit = (evt) => {\r\n        evt.preventDefault()\r\n\r\n        if (value === '') {\r\n            setError('Please fill out todo')\r\n            return\r\n        } else {\r\n            addTodo(value)\r\n            setValue('')\r\n        }\r\n    }\r\n\r\n    const handleChange = (evt) => {\r\n        if (error) setError('')\r\n        setValue(evt.target.value)\r\n    }\r\n\r\n    return(\r\n            <form>\r\n                <input type = 'text' onChange = {(e) => {\r\n                    var {value} = e.target\r\n                    setValue(value)\r\n                }} value = {value}\r\n                placeholder = 'Type item here'></input>\r\n\r\n                <button onClick = {(e) => \r\n                    {\r\n                        if(value.length !== 0){todo.addTodo(value)} \r\n                        else {\r\n                            setError('Please provide a todo')\r\n                        }\r\n                        e.preventDefault()\r\n\r\n                    }}>Add New Item</button>\r\n                \r\n                <p>{error}</p>\r\n            </form>\r\n        )\r\n}\r\n\r\nexport default TodoForm"]},"metadata":{},"sourceType":"module"}